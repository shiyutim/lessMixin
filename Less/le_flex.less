.compatibility_flex {
  display: -webkit-box;
  display: -moz-flex;
  display: -ms-flex;
  display: -webkit-flex;
}

.le_flex() {
  display: flex;
  .compatibility_flex()
}

.le_flex(@direction) {
  display: flex;
  .compatibility_flex();

  & when (@direction =row) {
    flex-direction: @direction;
    -webkit-box-orient: horizontal;
    -moz-box-orient: horizontal;
  }

  & when (@direction =column) {
    flex-direction: @direction;
    -webkit-box-orient: vertical;
    -moz-box-orient: vertical;
  }

  & when (@direction =row-reverse) {
    flex-direction: @direction;
    -webkit-box-orient: reverse;
    -moz-box-orient: reverse;
  }

  & when (@direction =column-reverse) {
    flex-direction: @direction;
    -webkit-box-orient: reverse;
    -moz-box-orient: reverse;
  }
}

.le_flex(@direction; @wrap) {
  display: flex;
  flex-flow: @direction @wrap;
  -webkit-flex-direction: @direction;
  -webkit-flex-wrap: @wrap;
  -moz-flex-direction: @direction;
  -moz-flex-wrap: @wrap;

  // `direction`
  & when (@direction =row) {
    -webkit-box-orient: horizontal;
    -moz-box-orient: horizontal;
  }

  & when (@direction =column) {
    -webkit-box-orient: vertical;
    -moz-box-orient: vertical;
  }

  & when (@direction =row-reverse) {
    -webkit-box-orient: reverse;
    -moz-box-orient: reverse;
  }

  & when (@direction =column-reverse) {
    -webkit-box-orient: reverse;
    -moz-box-orient: reverse;
  }

  // `wrap`

  & when (@wrap =wrap) {
    -webkit-box-lines: multiple;
    -moz-box-lines: multiple;
  }

  & when (@wrap =nowrap) {
    -webkit-box-lines: single;
    -moz-box-lines: single;
  }
}


.le_flex(@direction; @wrap; @justify) {
  display: flex;
  flex-flow: @direction @wrap;
  justify-content: @justify;
  -webkit-flex-direction: @direction;
  -webkit-flex-wrap: @wrap;
  -moz-flex-direction: @direction;
  -moz-flex-wrap: @wrap;
  -webkit-justify-content: @justify;
  -moz-justify-content: @justify;

  // `direction`
  & when (@direction =row) {
    -webkit-box-orient: horizontal;
    -moz-box-orient: horizontal;
  }

  & when (@direction =column) {
    -webkit-box-orient: vertical;
    -moz-box-orient: vertical;
  }

  & when (@direction =row-reverse) {
    -webkit-box-orient: reverse;
    -moz-box-orient: reverse;
  }

  & when (@direction =column-reverse) {
    -webkit-box-orient: reverse;
    -moz-box-orient: reverse;
  }

  // `wrap`

  & when (@wrap =wrap) {
    -webkit-box-lines: multiple;
    -moz-box-lines: multiple;
  }

  & when (@wrap =nowrap) {
    -webkit-box-lines: single;
    -moz-box-lines: single;
  }

  // `justify`

  & when(@justify =flex-start) {
    -webkit-box-pack: start;
    -moz-box-pack: start;
  }

  & when(@justify =flex-end) {
    -webkit-box-pack: end;
    -moz-box-pack: end;
  }

  & when(@justify =center) {
    -webkit-box-pack: center;
    -moz-box-pack: center;
  }

  & when(@justify =space-between) {
    -webkit-box-pack: justify;
    -moz-box-pack: justify;
  }

}




.le_flex(@direction; @wrap; @justify; @align) {
  display: flex;
  flex-flow: @direction @wrap;
  justify-content: @justify;
  align-items: @align;
  -webkit-flex-direction: @direction;
  -webkit-flex-wrap: @wrap;
  -moz-flex-direction: @direction;
  -moz-flex-wrap: @wrap;
  -webkit-justify-content: @justify;
  -moz-justify-content: @justify;
  -webkit-align-items: @align;
  -moz-align-items: @align;

  // `direction`
  & when (@direction =row) {
    -webkit-box-orient: horizontal;
    -moz-box-orient: horizontal;
  }

  & when (@direction =column) {
    -webkit-box-orient: vertical;
    -moz-box-orient: vertical;
  }

  & when (@direction =row-reverse) {
    -webkit-box-orient: reverse;
    -moz-box-orient: reverse;
  }

  & when (@direction =column-reverse) {
    -webkit-box-orient: reverse;
    -moz-box-orient: reverse;
  }

  // `wrap`

  & when (@wrap =wrap) {
    -webkit-box-lines: multiple;
    -moz-box-lines: multiple;
  }

  & when (@wrap =nowrap) {
    -webkit-box-lines: single;
    -moz-box-lines: single;
  }

  // `justify`

  & when(@justify =flex-start) {
    -webkit-box-pack: start;
    -moz-box-pack: start;
  }

  & when(@justify =flex-end) {
    -webkit-box-pack: end;
    -moz-box-pack: end;
  }

  & when(@justify =center) {
    -webkit-box-pack: center;
    -moz-box-pack: center;
  }

  & when(@justify =space-between) {
    -webkit-box-pack: justify;
    -moz-box-pack: justify;
  }

  // `align`

  & when (@align =flex-start) {
    -webkit-box-align: start;
    -moz-box-align: start;
  }

  & when (@align =flex-end) {
    -webkit-box-align: end;
    -moz-box-align: end;
  }

  & when (@align =center) {
    -webkit-box-align: center;
    -moz-box-align: center;
  }

  & when (@align =stretch) {
    -webkit-box-align: stretch;
    -moz-box-align: stretch;
  }
}
